{"version":3,"sources":["svg sync //.svg$","svg/bulb.svg","svg/claw.svg","svg/drop-01.svg","svg/drop-narrow.svg","svg/drop.svg","svg/droplet.svg","svg/feather.svg","svg/hook.svg","svg/leaf-simple.svg","svg/logo.svg","svg/poker-sharp-01.svg","svg/poker-sharp.svg","svg/poker.svg","patterns sync //.(json)$","svg/index.js","constants/colors.js","patterns/index.js","lib/layer.js","lib/utils.js","components/SVGShape.js","components/CameraControls.js","components/FiberCanvas.js","components/FiberStar.js","components/Pattern.js","components/ColorButton.js","components/SceneControls.js","hooks/useQueryString.js","App.js","index.js","svg/hexagon.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","require","SUNLIGHT","MOONLIGHT","TEAL","PEA","SLATE","NEW_ENGLAND","LAVENDER","svgFiles","reduce","acc","next","replace","patternFiles","importAll","PATTERNS","filename","layers","patternData","name","OrderedMap","layer","i","COLORS","fillColor","strokeColor","fileName","url","split","pop","console","log","Map","extend","meshline","startAt","EXTRUDE_DEFAULTS","bevelEnabled","steps","depth","material","extrudeMaterial","SVGShape","rotation","strokeWidth","rest","svg","useLoader","SVGLoader","shape","useMemo","paths","flatMap","path","index","toShapes","geometry","THREE","setFromPoints","getPoints","color","textureUrl","texture","wrapS","wrapT","offset","set","repeat","materialProps","opacity","meshProps","position","scale","extrudeSettings","strokeSettings","MaterialComponent","props","phong","shininess","specular","receiveShadow","castShadow","attach","transparent","args","depthTest","lineWidth","sizeAttenuation","OrbitControls","elapsedMs","CameraControls","animating","Date","now","useThree","camera","domElement","gl","controls","useRef","useFrame","delta","current","update","Math","sin","cos","z","ref","FiberCanvas","intensity","children","PI","fallback","hexagon","zPosition","FiberStar","numPoints","radius","PointComponent","start","stop","step","Array","ceil","fill","x","y","range","rot","rad","MathUtils","degToRad","key","defaultProps","rotations","Pattern","pattern","toList","toJS","ColorButton","state","displayColorPicker","handleClick","setState","handleClose","className","style","backgroundColor","this","value","width","height","display","onClick","zIndex","top","right","bottom","left","onChange","React","Component","SliderWithTooltip","createSliderWithTooltip","Slider","LAYER_CONTROLS","type","min","max","TEXTURE_OPTIONS","label","concat","LayerControls","updatePattern","size","prop","horizontal","expanded","Label","Body","menuPlacement","menuPosition","renderNumberField","hex","propName","customStyles","container","provided","option","find","options","styles","renderTextureUrlField","patternIndex","setPatternIndex","setIntensity","target","Trigger","textAlign","Menu","Content","Item","active","val","setQueryStringWithoutPageReload","qsValue","newurl","window","location","protocol","host","pathname","history","pushState","useQueryString","initialValue","useState","queryString","search","values","qs","parse","substring","getQueryStringValue","setValue","useCallback","newValue","newQsValue","stringify","setQueryStringValue","App","setAnimating","setPattern","useEffect","onKeyDown","metaKey","keyCode","length","addEventListener","removeEventListener","newPattern","SceneControls","setIn","fov","near","far","up","onCreated","scene","__scene","lookAt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16d2ba93.chunk.js","sourcesContent":["var map = {\n\t\"./bulb.svg\": 134,\n\t\"./claw.svg\": 135,\n\t\"./drop-01.svg\": 136,\n\t\"./drop-narrow.svg\": 137,\n\t\"./drop.svg\": 138,\n\t\"./droplet.svg\": 139,\n\t\"./feather.svg\": 140,\n\t\"./hexagon.svg\": 76,\n\t\"./hook.svg\": 141,\n\t\"./leaf-simple.svg\": 142,\n\t\"./logo.svg\": 143,\n\t\"./poker-sharp-01.svg\": 144,\n\t\"./poker-sharp.svg\": 145,\n\t\"./poker.svg\": 146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 133;","module.exports = __webpack_public_path__ + \"static/media/bulb.d3a1ee51.svg\";","module.exports = __webpack_public_path__ + \"static/media/claw.a1763bbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-01.57c76527.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-narrow.494cfd42.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop.5a97d7ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/droplet.b2f0e25e.svg\";","module.exports = __webpack_public_path__ + \"static/media/feather.d9a36528.svg\";","module.exports = __webpack_public_path__ + \"static/media/hook.3f451594.svg\";","module.exports = __webpack_public_path__ + \"static/media/leaf-simple.f3f086d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/poker-sharp-01.e5da0332.svg\";","module.exports = __webpack_public_path__ + \"static/media/poker-sharp.e5da0332.svg\";","module.exports = __webpack_public_path__ + \"static/media/poker.b001a47e.svg\";","var map = {\n\t\"./blue-tiles.json\": 148,\n\t\"./drops.json\": 149,\n\t\"./feather-poker.json\": 150,\n\t\"./kennedith.json\": 151\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 147;","const importAll = (require) =>\n  require.keys().reduce((acc, next) => {\n    acc[next.replace(\"./\", \"\")] = require(next);\n    return acc;\n  }, {});\n\nconst svgFiles = importAll(require.context(\"./\", true, /\\.svg$/));\n\nexport default svgFiles;\n","export const SUNLIGHT = \"#e9c46a\";\nexport const MOONLIGHT = \"#a8dadc\";\nexport const TEAL = \"#2a9d8f\";\nexport const PEA = \"#90be6d\";\nexport const SLATE = \"#14213d\";\nexport const NEW_ENGLAND = \"#457b9d\";\nexport const LAVENDER = \"#6D72C3\";\n","import { createLayers } from \"../lib/layer\";\n\nconst importAll = (require) =>\n  require.keys().reduce((acc, next) => {\n    acc[next.replace(\"./\", \"\")] = require(next);\n    return acc;\n  }, {});\n\nconst patternFiles = importAll(require.context(\"./\", true, /\\.(json)$/));\n\nconst PATTERNS = Object.keys(patternFiles).map((filename) => {\n  const patternData = patternFiles[filename];\n  return {\n    name: patternData.name || filename,\n    layers: createLayers(patternData.layers),\n  };\n});\n\nexport default PATTERNS;\n","import { Map, OrderedMap } from \"immutable\";\nimport * as COLORS from \"../constants/colors\";\nimport svgFiles from \"../svg\";\n\nexport const createLayers = (layers) => {\n  return OrderedMap(\n    layers.map((layer, i) => {\n      if (!layer.id) {\n        layer.id = i + 1;\n      }\n      if (COLORS[layer.fillColor]) {\n        layer.fillColor = COLORS[layer.fillColor];\n      }\n      if (COLORS[layer.strokeColor]) {\n        layer.strokeColor = COLORS[layer.strokeColor];\n      }\n      const fileName = layer.url.split(\"/\").pop();\n      console.log(fileName);\n      if (svgFiles[fileName]) {\n        layer.url = svgFiles[fileName];\n      }\n      return [i + 1, Map(layer)];\n    })\n  );\n};\n","import * as THREE from \"three\";\n\nexport const range = (start, stop, step = 1) => {\n  return Array(Math.ceil((stop - start) / step))\n    .fill(start)\n    .map((x, y) => x + y * step);\n};\n\nexport function pick(o, ...props) {\n  return Object.assign({}, ...props.map((prop) => ({ [prop]: o[prop] })));\n}\n\nlet _id = 0;\n\nconst uniqueId = () => _id++;\n\nexport const processSVG = (svgData) => {\n  const processed = svgData.paths.flatMap((path, index) => {\n    const shapes = path.toShapes(true);\n    return shapes.map((shape) => {\n      return {\n        shape,\n        geometry: new THREE.Geometry().setFromPoints(shape.getPoints()),\n        color: path.color,\n        index,\n      };\n    });\n  });\n  return processed[0];\n};\n","import React, { useMemo } from \"react\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\nimport { extend, useLoader } from \"react-three-fiber\";\nimport { MOONLIGHT, TEAL } from \"../constants/colors\";\nimport * as THREE from \"three\";\nimport { processSVG } from \"../lib/utils\";\nimport * as meshline from \"threejs-meshline\";\n\nextend(meshline);\n\nconst EXTRUDE_DEFAULTS = {\n  bevelEnabled: false,\n  steps: 1,\n  depth: 20, //extrusion depth, don't define an extrudePath\n  material: 0, //material index of the front and back face\n  extrudeMaterial: 1, //material index of the side faces\n};\n\nconst SVGShape = ({\n  url,\n  rotation,\n  fillColor = TEAL,\n  strokeWidth,\n  ...rest\n}) => {\n  const svg = useLoader(SVGLoader, url);\n  const shape = useMemo(() => processSVG(svg), [svg]);\n\n  const [texture] = useLoader(\n    THREE.TextureLoader,\n    rest.textureUrl ? [rest.textureUrl] : []\n  );\n  if (texture) {\n    texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping;\n    texture.offset.set(0, 0);\n    texture.repeat.set(0.001, 0.001);\n  }\n\n  const materialProps = {\n    opacity: rest.opacity || 1,\n    color: fillColor || shape.color,\n  };\n  const meshProps = {\n    position: rest.position,\n    rotation: [0, 0, rotation || 0],\n    scale: rest.scale,\n  };\n  const extrudeSettings = {\n    ...EXTRUDE_DEFAULTS,\n    depth: rest.depth || 10,\n  };\n  const strokeSettings = {\n    strokeWidth: strokeWidth,\n    strokeColor: rest.strokeColor || MOONLIGHT,\n  };\n\n  const renderStroke = () => {\n    return (\n      <mesh {...meshProps}>\n        <meshLine attach=\"geometry\" geometry={shape.geometry} />\n        <meshLineMaterial\n          attach=\"material\"\n          depthTest={true}\n          lineWidth={strokeWidth}\n          color={strokeSettings.strokeColor}\n          sizeAttenuation={true}\n        />\n      </mesh>\n    );\n  };\n\n  const MaterialComponent = (props) => {\n    if (props.phong) {\n      return (\n        <meshPhongMaterial {...props} shininess={100} specular={MOONLIGHT} />\n      );\n    }\n    return <meshStandardMaterial {...props} />;\n  };\n\n  return (\n    <>\n      <mesh {...meshProps} receiveShadow castShadow>\n        <MaterialComponent\n          attach=\"material\"\n          map={texture}\n          transparent\n          {...materialProps}\n        />\n        <extrudeGeometry\n          attach=\"geometry\"\n          args={[shape.shape, extrudeSettings]}\n        />\n      </mesh>\n      {strokeWidth && renderStroke()}\n    </>\n  );\n};\n\nexport default SVGShape;\n","import React, { useRef } from \"react\";\nimport { useFrame, useThree, extend } from \"react-three-fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nextend({ OrbitControls });\n\nlet startAt;\nlet elapsedMs = 0;\nlet pausedMs = 0;\nconst speed = 0.2;\nconst radius = 500;\n\nconst CameraControls = ({ animating }) => {\n  if (!startAt) {\n    startAt = Date.now();\n  }\n  // Get a reference to the Three.js Camera, and the canvas html element.\n  // We need these to setup the OrbitControls component.\n  // https://threejs.org/docs/#examples/en/controls/OrbitControls\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n  // Ref to the controls, so that we can update them on every frame using useFrame\n  const controls = useRef();\n  useFrame(({ camera }, delta) => {\n    if (animating) {\n      elapsedMs += delta * speed;\n    } else {\n      pausedMs += delta * speed;\n    }\n    controls.current.update();\n    // camera.rotation.z = elapsedMs % 360;\n    camera.position.set(\n      Math.sin(elapsedMs) * radius,\n      Math.cos(elapsedMs) * radius,\n      camera.position.z\n    );\n    // camera.lookAt(0, 0, 0);\n  });\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nexport default CameraControls;\n","import React, { Suspense } from \"react\";\nimport SVGShape from \"./SVGShape\";\nimport CameraControls from \"./CameraControls\";\nimport { MOONLIGHT } from \"../constants/colors\";\nimport hexagon from \"../svg/hexagon.svg\";\n\nconst FiberCanvas = ({ animating, intensity, children }) => {\n  return (\n    <>\n      <CameraControls animating={animating} />\n      <ambientLight position={[0, 0, 500]} color={MOONLIGHT} />\n      <gridHelper args={[2000, 20]} rotation={[Math.PI / 2, 0, 0]} />\n      <pointLight position={[0, 0, 500]} intensity={intensity} />\n      <Suspense fallback={null}>\n        <SVGShape\n          url={hexagon}\n          textureUrl=\"/img/dark-stone.jpg\"\n          scale={200}\n          zPosition={-20}\n        />\n      </Suspense>\n      <mesh>\n        <coneGeometry args={[50, 200, 320]} />\n        <meshBasicMaterial color={0xffff00} />\n      </mesh>\n      {children}\n    </>\n  );\n};\n\nexport default FiberCanvas;\n","import React, { Suspense } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MathUtils } from \"three\";\nimport { range } from \"../lib/utils\";\nimport SVGShape from \"./SVGShape\";\n\nconst FiberStar = ({\n  numPoints,\n  radius,\n  zPosition,\n  PointComponent,\n  ...rest\n}) => {\n  const stepSize = 360 / numPoints;\n  return range(0, 360, stepSize).map((rot, i) => {\n    const rad = MathUtils.degToRad(rot);\n    if (typeof rest.scale === \"number\") {\n      rest.scale = [rest.scale, rest.scale, rest.scale];\n    }\n\n    return (\n      <Suspense fallback={null} key={i}>\n        <PointComponent\n          key={i}\n          rotation={-rad}\n          position={[Math.sin(rad) * radius, Math.cos(rad) * radius, zPosition]}\n          {...rest}\n        />\n      </Suspense>\n    );\n  });\n};\n\nFiberStar.propTypes = {\n  numPoints: PropTypes.number.isRequired,\n  rotations: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  zPosition: PropTypes.number.isRequired,\n};\n\nFiberStar.defaultProps = {\n  numPoints: 6,\n  rotations: 1,\n  radius: 0,\n  zPosition: 0,\n  PointComponent: SVGShape,\n};\n\nexport default FiberStar;\n","import React from \"react\";\nimport FiberStar from \"./FiberStar\";\n\nconst Pattern = ({ pattern }) => {\n  const layerData = pattern.layers.toList().toJS();\n  return layerData.map((layer, i) => {\n    return <FiberStar key={i} {...layer} />;\n  });\n};\n\nexport default Pattern;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ChromePicker } from \"react-color\";\n\nclass ColorButton extends React.Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n  };\n\n  state = {\n    displayColorPicker: false,\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  render() {\n    const popover = {\n      position: \"absolute\",\n      zIndex: \"2\",\n    };\n    const cover = {\n      position: \"fixed\",\n      top: \"0px\",\n      right: \"0px\",\n      bottom: \"0px\",\n      left: \"0px\",\n    };\n    return (\n      <div className=\"color-button\">\n        <div\n          style={{\n            backgroundColor: this.props.value,\n            width: 34,\n            height: 34,\n            display: \"inline-block\",\n          }}\n          onClick={this.handleClick}\n        />\n        <button className=\"button is-primary\" onClick={this.handleClick}>\n          Pick Color\n        </button>\n        {this.state.displayColorPicker ? (\n          <div style={popover}>\n            <div style={cover} onClick={this.handleClose} />\n            <ChromePicker\n              color={this.props.value}\n              onChange={this.props.onChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ColorButton;\n","import PATTERNS from \"../patterns\";\nimport React from \"react\";\nimport { Button, Control, Dropdown, Field, Label } from \"rbx\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport Select from \"react-select\";\nimport \"rc-slider/assets/index.css\";\nimport ColorButton from \"./ColorButton\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst LAYER_CONTROLS = [\n  { name: \"numPoints\", type: \"number\", min: 1, max: 16, step: 1 },\n  { name: \"scale\", type: \"number\", min: 0.1, max: 5, step: 0.05 },\n  { name: \"radius\", type: \"number\", min: 0, max: 1000, step: 20 },\n  { name: \"strokeWidth\", type: \"number\", min: 0, max: 30 },\n  { name: \"opacity\", type: \"number\", min: 0.1, max: 1, step: 0.05 },\n];\n\nconst TEXTURE_URLS = [\n  \"/img/mosaic.jpg\",\n  \"/img/concrete.jpg\",\n  \"/img/dark-stone.jpg\",\n];\n\nconst TEXTURE_OPTIONS = [{ label: \"None\", value: null }].concat(\n  TEXTURE_URLS.map((url) => ({ label: url, value: url }))\n);\n\nconst LayerControls = ({ layer, updatePattern }) => {\n  const renderNumberField = (prop, i) => {\n    return (\n      <Field key={i} horizontal expanded>\n        <Field.Label size=\"small\" className=\"is-normal\">\n          <Label className=\"has-text-light\">{prop.name}</Label>\n        </Field.Label>\n        <Field.Body>\n          <SliderWithTooltip\n            {...prop}\n            type=\"range\"\n            size=\"small\"\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n            value={layer[prop.name] || 1}\n            onChange={(value) => {\n              updatePattern(layer.id, prop.name, value);\n            }}\n          />\n        </Field.Body>\n      </Field>\n    );\n  };\n\n  const renderTextureUrlField = (propName) => {\n    const customStyles = {\n      container: (provided) => ({\n        ...provided,\n        width: 200,\n      }),\n      option: (provided) => ({\n        ...provided,\n        color: \"black\",\n      }),\n    };\n\n    const value = layer[propName]\n      ? TEXTURE_OPTIONS.find((o) => o.value === layer[propName])\n      : TEXTURE_OPTIONS[0];\n\n    return (\n      <Field horizontal expanded>\n        <Field.Label size=\"small\" className=\"is-normal\">\n          <Label className=\"has-text-light\">{propName}</Label>\n        </Field.Label>\n        <Field.Body style={{ width: \"300px\" }}>\n          <Select\n            options={TEXTURE_OPTIONS}\n            value={value}\n            onChange={(option) => {\n              updatePattern(layer.id, propName, option.value);\n            }}\n            styles={customStyles}\n          />\n        </Field.Body>\n      </Field>\n    );\n  };\n\n  return (\n    <section className=\"layer-controls\">\n      <h3 size=\"small\">Layer {layer.id}</h3>\n      {LAYER_CONTROLS.map((prop, i) => renderNumberField(prop, i))}\n\n      <Field horizontal expanded>\n        <Field.Label size=\"small\">\n          <Label className=\"has-text-light\">fillColor</Label>\n        </Field.Label>\n        <Field.Body>\n          <ColorButton\n            value={layer.fillColor}\n            onChange={(color) => {\n              updatePattern(layer.id, \"fillColor\", color.hex);\n            }}\n          />\n        </Field.Body>\n      </Field>\n\n      {renderTextureUrlField(\"textureUrl\")}\n    </section>\n  );\n};\n\nexport default ({\n  pattern,\n  patternIndex,\n  setPatternIndex,\n  intensity,\n  setIntensity,\n  updatePattern,\n}) => {\n  const renderLayer = (layer, i) => (\n    <LayerControls key={i} layer={layer} updatePattern={updatePattern} />\n  );\n\n  return (\n    <section className=\"section scene-controls is-dark has-text-light\">\n      <div className=\"global-controls\">\n        <Field horizontal>\n          <Field.Label size=\"normal\">\n            <Label className=\"has-text-light\">Pattern</Label>\n          </Field.Label>\n          <Field.Body>\n            <Control>\n              <Dropdown\n                onChange={(e) => setPatternIndex(e.target.value)}\n                width={\"100%\"}\n              >\n                <Dropdown.Trigger>\n                  <Button width={\"100%\"} textAlign={\"left\"}>\n                    {pattern.name}\n                  </Button>\n                </Dropdown.Trigger>\n                <Dropdown.Menu>\n                  <Dropdown.Content>\n                    {PATTERNS.map((pattern, i) => (\n                      <Dropdown.Item\n                        key={i}\n                        value={i}\n                        active={patternIndex === i}\n                        onClick={() => setPatternIndex(i)}\n                      >\n                        {pattern.name}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Content>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Control>\n          </Field.Body>\n        </Field>\n        <div className=\"field is-horizontal\">\n          <div className=\"field-label\">\n            <Label className=\"has-text-light\">Point light intensity</Label>\n          </div>\n          <div className=\"field-body\">\n            <Slider\n              min={0.1}\n              max={5}\n              step={0.05}\n              value={intensity}\n              onChange={(val) => setIntensity(val)}\n            />\n          </div>\n        </div>\n      </div>\n      {pattern && pattern.layers.toList().toJS().map(renderLayer)}\n    </section>\n  );\n};\n","import { useState, useCallback } from \"react\";\nimport qs from \"querystring\";\n\nconst setQueryStringWithoutPageReload = (qsValue) => {\n  const newurl =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    qsValue;\n  window.history.pushState({ path: newurl }, \"\", newurl);\n};\n\nexport const getQueryStringValue = (\n  key,\n  queryString = window.location.search\n) => {\n  const values = qs.parse(queryString.substring(1));\n  return values[key];\n};\n\nconst setQueryStringValue = (\n  key,\n  value,\n  queryString = window.location.search\n) => {\n  const values = qs.parse(queryString.substring(1));\n  const newQsValue = qs.stringify({ ...values, [key]: value });\n  setQueryStringWithoutPageReload(`?${newQsValue}`);\n};\n\nfunction useQueryString(key, initialValue) {\n  const [value, setValue] = useState(getQueryStringValue(key) || initialValue);\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue);\n    },\n    [key]\n  );\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import React, { useEffect, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport PATTERNS from \"./patterns\";\nimport FiberCanvas from \"./components/FiberCanvas\";\nimport Pattern from \"./components/Pattern\";\nimport SceneControls from \"./components/SceneControls\";\nimport useQueryString from \"./hooks/useQueryString\";\nimport \"./App.css\";\n\nfunction App() {\n  const [animating, setAnimating] = useState(false);\n  const [intensity, setIntensity] = useState(1);\n  const [patternIndex, setPatternIndex] = useQueryString(\"i\", 0);\n  const [pattern, setPattern] = useState(PATTERNS[patternIndex]);\n\n  useEffect(() => {\n    const onKeyDown = (e) => {\n      if (e.metaKey) {\n        return;\n      }\n\n      if (e.keyCode === 32) {\n        setAnimating(!animating);\n      } else if (e.key === \"ArrowLeft\") {\n        let i = (patternIndex - 1) % PATTERNS.length;\n        if (i < 0) {\n          i = PATTERNS.length - 1;\n        }\n        setPatternIndex(i);\n        setPattern(PATTERNS[i]);\n      } else if (e.key === \"ArrowRight\") {\n        const i = (patternIndex + 1) % PATTERNS.length;\n        setPatternIndex(i);\n        setPattern(PATTERNS[i]);\n      } else {\n        return;\n      }\n    };\n\n    window.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n\n  const updatePatternLayer = (i, key, val) => {\n    setPattern((pattern) => ({\n      ...pattern,\n      layers: pattern.layers.setIn([i, key], val),\n    }));\n  };\n\n  useEffect(() => {\n    const newPattern = PATTERNS[patternIndex];\n    setPattern(newPattern);\n  }, [patternIndex]);\n\n  return (\n    <main className=\"App\">\n      <SceneControls\n        pattern={pattern}\n        patternIndex={patternIndex}\n        setPatternIndex={setPatternIndex}\n        intensity={intensity}\n        setIntensity={setIntensity}\n        updatePattern={updatePatternLayer}\n      />\n      <Canvas\n        camera={{\n          fov: 90,\n          position: [0, 0, 500],\n          near: 1,\n          far: 10000,\n          up: [0, 0, 100],\n        }}\n        onCreated={(scene) => {\n          window.__scene = scene;\n          scene.camera.lookAt(0, 0, 0);\n        }}\n      >\n        <FiberCanvas animating={animating} intensity={intensity}>\n          <Pattern key={pattern.name} pattern={pattern} />\n        </FiberCanvas>\n      </Canvas>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport \"./app.sass\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/hexagon.6bbb3d58.svg\";"],"sourceRoot":""}